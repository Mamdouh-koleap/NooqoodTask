// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservation_Persistence;

namespace Reservation_Persistence.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    partial class ReservationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Reservation", b =>
                {
                    b.Property<Guid>("ReversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReversationId");

                    b.HasIndex("TripId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReversationId = new Guid("cc505b3b-d35f-4e74-935b-38b42271ec4a"),
                            CreationDate = new DateTime(2021, 10, 3, 10, 17, 28, 129, DateTimeKind.Local).AddTicks(1467),
                            CustomerName = "Ali Nadi Ali",
                            Notes = "no notes",
                            ReservationDate = new DateTime(2021, 10, 3, 10, 17, 28, 129, DateTimeKind.Local).AddTicks(49),
                            ReservedBy = "mamdouh.koleap@gmail.com",
                            TripId = new Guid("860764f2-d405-4142-86d1-efc7bb8c9672")
                        });
                });

            modelBuilder.Entity("Domain.Trip", b =>
                {
                    b.Property<Guid>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("TripId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            TripId = new Guid("860764f2-d405-4142-86d1-efc7bb8c9672"),
                            CityName = "hurghada",
                            CreationDate = new DateTime(2021, 10, 3, 10, 17, 28, 126, DateTimeKind.Local).AddTicks(9514),
                            Name = "break trip",
                            content = " Accepts HTML Format",
                            price = 1000
                        });
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("d5a11f41-2e72-4b08-b02b-f0250f540654"),
                            Email = "mamdouh.koleap@gmail.com",
                            Password = "mamdouh123"
                        });
                });

            modelBuilder.Entity("Domain.Reservation", b =>
                {
                    b.HasOne("Domain.Trip", "trip")
                        .WithMany()
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("trip");
                });
#pragma warning restore 612, 618
        }
    }
}
